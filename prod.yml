version: '3.11'

services:

  web:
    build:
      context: .
      dockerfile: compose/prod/django/Dockerfile

    volumes:
      - ./src:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.envs/.prod/.django
      - ./.envs/.prod/.postgres
    depends_on:
      - db
    command: sh -c "python manage.py collectstatic --no-input && 
                    python manage.py makemigrations &&
                    python manage.py migrate &&
                    gunicorn --workers=4 --reload --max-requests=1000 config.wsgi:application -b 0.0.0.0:8000"

  nginx:
    container_name: nginx
    working_dir: /app
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/prod/:/etc/nginx/conf.d:ro
      - ./certbot/conf/:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    links:
      - web
    depends_on:
      - web

  db:
    image: postgres:13.0-alpine
    ports:
      - "30333:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .envs/.prod/.postgres

  telegram-bot:
    build:
      context: .
      dockerfile: compose/prod/bot/Dockerfile
    env_file:
      - ./.envs/.prod/.bot
    container_name: cutter_bot
    restart: unless-stopped
    volumes:
      - ./src/bot:/app

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw
#    command: certonly --webroot --webroot-path=/var/www/certbot/ --email shmicer@gmail.com --agree-tos --no-eff-email -d cl2u.ru -d www.cl2u.ru
    depends_on:
      - nginx

volumes:
  postgres_data: {}